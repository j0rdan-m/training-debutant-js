<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exercices on Training JS FR</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/</link><description>Recent content in Exercices on Training JS FR</description><generator>Hugo -- gohugo.io</generator><language>fr-FR</language><lastBuildDate>Mon, 15 Nov 2021 10:38:09 +0100</lastBuildDate><atom:link href="https://j0rdan-m.github.io/training-debutant-js/exercices/index.xml" rel="self" type="application/rss+xml"/><item><title>0010 - Variables - Number</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0010/</link><pubDate>Mon, 15 Nov 2021 10:38:09 +0100</pubDate><guid>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0010/</guid><description>Objectif Dans cet exercice, vous devrez créer trois variables :
la variable &amp;lsquo;un&amp;rsquo; qui vaut 1 ; la variable &amp;lsquo;deux&amp;rsquo; qui vaut 2 ; la variable &amp;lsquo;vingttrois&amp;rsquo; qui vaut 23 ; Chaque variable doit être un nombre, et pas une string
Code //AJOUTER VOTRE CODE ICI // NE PAS TOUCHER AU CODE CI-DESSOUS let type = (typeof(un)!= &amp;#39;number&amp;#39; || typeof(deux)!= &amp;#39;number&amp;#39; || typeof(vingttrois)!= &amp;#39;number&amp;#39;) ? false : true ; let value = (un === 1 &amp;amp;&amp;amp; deux === 2 &amp;amp;&amp;amp; vingttrois === 23) if (!</description></item><item><title>0020 - Variables - String</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0020/</link><pubDate>Mon, 15 Nov 2021 10:38:09 +0100</pubDate><guid>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0020/</guid><description>Objectif Dans cet exercice, vous devrez créer trois variables :
la variable &amp;lsquo;hello&amp;rsquo; qui vaut &amp;ldquo;bonjour&amp;rdquo; ; la variable &amp;lsquo;iamdev&amp;rsquo; qui vaut &amp;ldquo;Je développe en javascript&amp;rdquo; ; la variable &amp;lsquo;intro&amp;rsquo; qui doit correspondre à la valeur de la variable &amp;lsquo;hello&amp;rsquo; suivi d&amp;rsquo;une virgule, d&amp;rsquo;un espace, et enfin de la valeur de la variable &amp;lsquo;iamdev&amp;rsquo; ; Code //AJOUTER VOTRE CODE ICI // NE PAS TOUCHER AU CODE CI-DESSOUS let str1 = (hello === &amp;#34;bonjour&amp;#34;) ?</description></item><item><title>0030 - Variables - gestion des types</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0030/</link><pubDate>Mon, 15 Nov 2021 10:38:09 +0100</pubDate><guid>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0030/</guid><description>Objectif Dans cet exercice, vous devrez créer trois variables :
la variable &amp;lsquo;str&amp;rsquo; qui sera une string dont la valeur est : &amp;ldquo;12&amp;rdquo; ; la variable &amp;lsquo;num&amp;rsquo; qui sera un nombre qui vaut 15 ; la variable strNum qui sera une string dont la valeur est la valeur numérique de str multiplié par la valeur de num; Code //AJOUTER VOTRE CODE ICI // NE PAS TOUCHER AU CODE CI-DESSOUS let str1 = (str === &amp;#34;12&amp;#34;) ?</description></item><item><title>0040 - Variables - boolean</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0040/</link><pubDate>Mon, 15 Nov 2021 10:38:09 +0100</pubDate><guid>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0040/</guid><description>Objectif Dans cet exercice, vous devrez créer trois variables :
la variable &amp;lsquo;bool1&amp;rsquo; qui sera un boolean vrai ; la variable &amp;lsquo;bool2&amp;rsquo; qui sera un boolean faux ; la variable &amp;lsquo;bool3&amp;rsquo; qui sera l&amp;rsquo;inverse de bool1; Code //AJOUTER VOTRE CODE ICI // NE PAS TOUCHER AU CODE CI-DESSOUS let error = &amp;#34;&amp;#34; error += (bool1) ? &amp;#34;&amp;#34; : &amp;#34;bool1 doit valoir vrai ; &amp;#34;; error += (!</description></item><item><title>0110 - Fonctions - construction de chaine</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0110/</link><pubDate>Mon, 15 Nov 2021 10:38:09 +0100</pubDate><guid>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0110/</guid><description>Objectif Dans cet exercice, vous devrez créer une fonction qui s&amp;rsquo;appelle &amp;ldquo;buildStr&amp;rdquo; :
cette fonction prend deux paramètres en entrée : le prénom d&amp;rsquo;une personne et son âge ; cette fonction renvoie une chaine de caractère reprenant le prénom de la personne, suivi de &amp;quot; a &amp;ldquo;, suivi de l'âge, suivi de &amp;quot; ans.&amp;rdquo; ; Code //AJOUTER VOTRE CODE ICI // NE PAS TOUCHER AU CODE CI-DESSOUS let strTest = buildStr(&amp;#34;j0rdan&amp;#34;, 38); let result = (strTest === &amp;#34;j0rdan a 38 ans.</description></item><item><title>0120 - Fonctions - inverser un boolean</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0120/</link><pubDate>Mon, 15 Nov 2021 10:38:09 +0100</pubDate><guid>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0120/</guid><description>Objectif Dans cet exercice, vous devrez créer une fonction qui s&amp;rsquo;appelle &amp;ldquo;invertBoolean&amp;rdquo; :
cette fonction prend un paramètre en entrée de type boolean ; cette fonction renvoie un tableau contenant un premier item qui est un boolean qui vaut l&amp;rsquo;inverse du boolean d&amp;rsquo;entrée ; si le boolean d&amp;rsquo;entrée est vrai, le second item du tableau est une string dont la valeur est &amp;ldquo;C'était VRAI&amp;rdquo;, sinon, le second item du tableau est une string dont la valeur est &amp;ldquo;C'était FAUX&amp;rdquo; Code //AJOUTER VOTRE CODE ICI // NE PAS TOUCHER AU CODE CI-DESSOUS let answer1 = invertBoolean(true) let result1 = (!</description></item><item><title>0130 - Fonctions - pair ou impair</title><link>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0130/</link><pubDate>Mon, 15 Nov 2021 10:38:09 +0100</pubDate><guid>https://j0rdan-m.github.io/training-debutant-js/exercices/exercice0130/</guid><description>Objectif Dans cet exercice, vous devrez créer une fonction qui s&amp;rsquo;appelle &amp;ldquo;oddOrEven&amp;rdquo; :
cette fonction prend un paramètre en entrée de type number ; cette fonction renvoie une chaine de caractères indiquant &amp;ldquo;odd&amp;rdquo; si le nombre passé en paramètre est impair, et &amp;ldquo;even&amp;rdquo; s&amp;rsquo;il est pair. Code //AJOUTER VOTRE CODE ICI // NE PAS TOUCHER AU CODE CI-DESSOUS let result = (oddOrEven(13) === &amp;#34;odd&amp;#34; &amp;amp;&amp;amp; oddOrEven(12) === &amp;#34;even&amp;#34;) ?</description></item></channel></rss>